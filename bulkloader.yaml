# Autogenerated bulkloader.yaml file.
# You must edit this file before using it. TODO: Remove this line when done.
# At a minimum address the items marked with TODO:
#  * Fill in connector and connector_options
#  * Review the property_map.
#    - Ensure the 'external_name' matches the name of your CSV column,
#      XML tag, etc.
#    - Check that __key__ property is what you want. Its value will become
#      the key name on import, and on export the value will be the Key
#      object.  If you would like automatic key generation on import and
#      omitting the key on export, you can remove the entire __key__
#      property from the property map.

# If you have module(s) with your model classes, add them here. Also
# change the kind properties to model_class.
python_preamble:
- import: base64
- import: re
- import: json
- import: google.appengine.ext.bulkload.transform
- import: google.appengine.ext.bulkload.bulkloader_wizard
- import: google.appengine.ext.db
- import: google.appengine.api.datastore
- import: google.appengine.api.users

transformers:

- kind: ApiAuthorisation
  connector: simplexml
  connector_options:
    xpath_to_nodes: /ApiAuthorisations/ApiAuthorisation
    style: element_centric
  property_map:
    - property: __key__
      external_name: key
      export_transform: transform.key_id_or_name_as_string

    - property: a
      external_name: a
      # Type: String Stats: 2 properties of this type in this kind.

    - property: c
      external_name: c
      # Type: String Stats: 2 properties of this type in this kind.

    - property: d
      external_name: d
      # Type: Text Stats: 2 properties of this type in this kind.
      import_transform: db.Text

    - property: l
      external_name: l
      # Type: Date/Time Stats: 2 properties of this type in this kind.
      import_transform: transform.import_date_time('%Y-%m-%dT%H:%M:%S')
      export_transform: transform.export_date_time('%Y-%m-%dT%H:%M:%S')

    - property: n
      external_name: n
      # Type: Date/Time Stats: 2 properties of this type in this kind.
      import_transform: transform.import_date_time('%Y-%m-%dT%H:%M:%S')
      export_transform: transform.export_date_time('%Y-%m-%dT%H:%M:%S')

    - property: s
      external_name: s
      # Type: Text Stats: 2 properties of this type in this kind.
      import_transform: db.Text

    - property: u
      external_name: u
      # Type: User Stats: 2 properties of this type in this kind.
      import_transform: transform.none_if_empty(users.User)  # Assumes email address

    - property: v
      external_name: v
      # Type: Text Stats: 1 properties of this type in this kind.
      import_transform: db.Text


- kind: EventLog
  connector: simplexml
  connector_options:
    xpath_to_nodes: /EventLogss/EventLog
    style: element_centric
  property_map:
    - property: __key__
      external_name: key
      export_transform: transform.key_id_or_name_as_string

    - property: addr
      external_name: addr
      # Type: Text Stats: 53 properties of this type in this kind.
      import_transform: db.Text

    - property: city
      external_name: city
      # Type: Text Stats: 53 properties of this type in this kind.
      import_transform: db.Text

    - property: client
      external_name: client
      # Type: Boolean Stats: 53 properties of this type in this kind.
      import_transform: transform.regexp_bool('true', re.IGNORECASE)

    - property: date
      external_name: date
      # Type: Date/Time Stats: 53 properties of this type in this kind.
      import_transform: transform.import_date_time('%Y-%m-%dT%H:%M:%S')
      export_transform: transform.export_date_time('%Y-%m-%dT%H:%M:%S')

    - property: entries
      external_name: entries
      # Type: EmbeddedEntity Stats: 373 properties of this type in this kind.
      import_transform: transform.list_from_child_node('Entries/Entry')
      export_transform: "lambda a: transform.child_node_from_list('Entries/Entry')(a) if a else ''"

    - property: extra
      external_name: extra
      # Type: Blob Stats: 52 properties of this type in this kind.
      import_transform: "lambda a: json.loads(a) if a else None"
      export_transform: "lambda a: json.dumps(a) if a else ''"

    - property: loc
      external_name: loc
      # Type: GeoPt Stats: 53 properties of this type in this kind.
      import_transform: "lambda a: db.GeoPt(**json.loads(a)) if a else None"
      export_transform: "lambda a: json.dumps({'lat':a.lat,'lon':a.lon}) if a else ''"

    - property: name
      external_name: name
      # Type: Text Stats: 26 properties of this type in this kind.
      import_transform: db.Text

    - property: uid
      external_name: uid
      # Type: String Stats: 53 properties of this type in this kind.


- kind: NetworkService
  connector: simplexml
  connector_options:
    xpath_to_nodes: /NetworkServices/NetworkService
    style: element_centric
  property_map:
    - property: __key__
      external_name: key
      export_transform: transform.key_id_or_name_as_string

    - property: as
      external_name: as
      # Type: Text Stats: 9989 properties of this type in this kind.
      import_transform: db.Text

    - property: ct
      external_name: ct
      # Type: Text Stats: 9989 properties of this type in this kind.
      import_transform: db.Text

    - property: dc
      external_name: dc
      # Type: Text Stats: 9989 properties of this type in this kind.
      import_transform: db.Text

    - property: md
      external_name: md
      # Type: Date/Time Stats: 9989 properties of this type in this kind.
      import_transform: transform.import_date_time('%Y-%m-%dT%H:%M:%S')
      export_transform: transform.export_date_time('%Y-%m-%dT%H:%M:%S')

    - property: nm
      external_name: nm
      # Type: String Stats: 9989 properties of this type in this kind.

    - property: pr
      external_name: pr
      # Type: Text Stats: 9989 properties of this type in this kind.
      import_transform: db.Text

    - property: pt
      external_name: pt
      # Type: Integer Stats: 9822 properties of this type in this kind.
      import_transform: transform.none_if_empty(int)


- kind: ServiceLocation
  connector: simplexml
  connector_options:
    xpath_to_nodes: /ServiceLocations/ServiceLocation
    style: element_centric
  property_map:
    - property: __key__
      external_name: key
      export_transform: transform.key_id_or_name_as_string

    - property: ia
      external_name: ia
      # Type: Text Stats: 3 properties of this type in this kind.
      import_transform: db.Text

    - property: pa
      external_name: pa
      # Type: String Stats: 3 properties of this type in this kind.

    - property: ph
      external_name: ph
      # Type: Text Stats: 3 properties of this type in this kind.
      import_transform: db.Text

    - property: pt
      external_name: pt
      # Type: Integer Stats: 3 properties of this type in this kind.
      import_transform: transform.none_if_empty(int)

    - property: ts
      external_name: ts
      # Type: Date/Time Stats: 3 properties of this type in this kind.
      import_transform: transform.import_date_time('%Y-%m-%dT%H:%M:%S')
      export_transform: transform.export_date_time('%Y-%m-%dT%H:%M:%S')

    - property: uid
      external_name: uid
      # Type: String Stats: 3 properties of this type in this kind.

